@page "/books/view/{Id}"
@inject IBookRepository _bookRepo
@inject NavigationManager _navManager

<h3>View Book Details</h3>

@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="There are no books to display." />
}
else if (Model == null)
{
    <LoadingMessage Message="Loading Book Details..." />
}
else
{
<div>
    <div class="col-6">
        <table class="table table-responsive">
            <tr>
                <td>
                    <strong>Title</strong>
                </td>
                <td>@Model.Title</td>
            </tr>
            <tr>
                <td>
                    <strong>Author</strong>
                </td>
                <td>
                    @if (Model.Author == null)
                    {
                        <span class="text-muted">No Author Listed.</span>
                    }
                    else
                    {
                        <a href="/author/view/@Model.AuthorId">@Model.Author.Firstname @Model.Author.Lastname</a>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <strong>Summary</strong>
                </td>
                <td>@Model.Summary</td>
            </tr>
            <tr>
                <td>
                    <strong>Published Year</strong>
                </td>
                <td>@Model.Year</td>
            </tr>
            <tr>
                <td>
                    <strong>ISBN</strong>
                </td>
                <td>@Model.Isbn</td>
            </tr>
        </table>
    </div>
    <div class="col-4">
        <img src="uploads/@Model.Image" style="height:300px; width:300px" />
        <h3 class="text-center text-info">@Model.Price</h3>
    </div>
</div>
}

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private Book Model = new Book();

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _bookRepo.Get(Endpoints.BooksEndpoint, id);
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/books/");
    }
}
